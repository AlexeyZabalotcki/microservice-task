plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.specific-group'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
}

ext {
	set('springCloudVersion', "2022.0.2")
	set('springdocVersion', "2.1.0")
	set('feignReactorVersion', "4.0.0")
	jjwtVersion = "0.11.5"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.cloud:spring-cloud-config-client'
	implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
	implementation "io.jsonwebtoken:jjwt-gson:${jjwtVersion}"
	implementation "org.springdoc:springdoc-openapi-starter-webflux-ui:${springdocVersion}"
	implementation "com.playtika.reactivefeign:feign-reactor-spring-cloud-starter:${feignReactorVersion}"
	implementation 'com.auth0:java-jwt:4.2.1'
	implementation 'org.springframework.security:spring-security-rsa:1.1.1'
	implementation 'net.logstash.logback:logstash-logback-encoder:6.4'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	annotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
